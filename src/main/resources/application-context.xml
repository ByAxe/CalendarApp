<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright © 2016 Litvinau Aleksei (ByAxe).
  ~  Licensed under the Apache License, Version 2.0
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!--Система уведомлений-->
	<import resource="quartz-context.xml"/>

	<!--Сканируем содержимое указанных пакетов на бины-->
	<context:component-scan base-package="repository, service, controller, core.converters, core.validators"/>

	<!--Указываем расположение properties файла-->
	<context:property-placeholder location="properties/application.properties"/>

	<!--Включаем АOP-->
	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<!--Включаем возможность транзакций-->
	<tx:annotation-driven/>

	<!--Репозитории (DAO) для работы с базой-->
	<jpa:repositories base-package="repository" transaction-manager-ref="transactionManager"/>

	<!--Устанавливаем кто будет ответственный за конверсию данных между Моделью и Сервисом-->
	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<!--DTO to Entity-->
				<ref bean="eventsDTOToEntityConverter"/>
				<ref bean="groupsDTOToEntityConverter"/>
				<ref bean="rulersDTOToEntityConverter"/>
				<ref bean="ordersDTOToEntityConverter"/>
				<ref bean="organisationsDTOToEntityConverter"/>
				<ref bean="studentsDTOToEntityConverter"/>
				<ref bean="allocationDTOToEntityConverter"/>
				<ref bean="preferencesDTOToEntityConverter"/>
				<ref bean="notificationsLogDTOToEntityConverter"/>

				<!--Entity to DTO-->
				<ref bean="eventsEntityToDTOConverter"/>
				<ref bean="groupsEntityToDTOConverter"/>
				<ref bean="rulersEntityToDTOConverter"/>
				<ref bean="ordersEntityToDTOConverter"/>
				<ref bean="organisationsEntityToDTOConverter"/>
				<ref bean="studentsEntityToDTOConverter"/>
				<ref bean="allocationEntityToDTOConverter"/>
				<ref bean="preferencesEntityToDTOConverter"/>
				<ref bean="notificationsLogEntityToDTOConverter"/>
			</set>
		</property>
	</bean>

	<!--_____________________begin::Конфигурируем контекст для работы с базой______________________________-->
	<!--___________________________________________________________________________________________________-->

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${database.driver}"/>
		<property name="jdbcUrl" value="${database.url}"/>
		<property name="user" value="${database.username}"/>
		<property name="password" value="${database.password}"/>
		<property name="initialPoolSize" value="${c3p0.minPoolSize}"/>
		<property name="minPoolSize" value="${c3p0.minPoolSize}"/>
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
		<property name="maxConnectionAge" value="${c3p0.maxConnectionAge}"/>
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
		<property name="numHelperThreads" value="${database.numHelperThreads}"/>
		<property name="preferredTestQuery" value="${database.validationQuery}"/>
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="model.entity"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="${database.showSql}"/>
				<property name="databasePlatform" value="${database.dialect}"/>
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<!--<prop key="hibernate.hbm2ddl.auto">${database.hbm2ddl}</prop>-->
				<prop key="hibernate.default_schema">${database.default_schema}</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">${database.lazyTransactions}</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="rollbackOnCommitFailure" value="true"/>
	</bean>

	<bean id="persistenceAnnotation"
		  class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

	<!--_____________________end::Конфигурируем контекст для работы с базой________________________________-->
	<!--___________________________________________________________________________________________________-->

</beans>