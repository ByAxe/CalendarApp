<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~  Copyright Â© 2016 Litvinau Aleksei (ByAxe).
  ~  Licensed under the Apache License, Version 2.0
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:util="http://www.springframework.org/schema/util" xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<bean id="quartzJobFactory" class="service.quartz.AutowiringSpingBeanJobFactory">
		<property name="ignoredUnknownProperties" value="applicationContext"/>
	</bean>

	<bean id="updateNotificationsLogTask" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="service.quartz.jobs.UpdateNotificationsLogJob"/>
		<property name="group" value="NOTIFICATIONS_LOG_UPDATE_JOBS_GROUP"/>
		<property name="name" value="NOTIFICATIONS_LOG_UPDATE_JOB"/>
		<property name="durability" value="true"/>
	</bean>
	<bean id="refreshDataJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="service.quartz.jobs.RefreshDataJob"/>
		<property name="group" value="REFRESH_DATA_JOBS_GROUP"/>
		<property name="name" value="REFRESH_DATA_JOB"/>
		<property name="durability" value="true"/>
	</bean>

	<util:list id="quartzTriggers">
		<bean class="service.quartz.PersistableCronTriggerFactoryBean">
			<property name="jobDetail" ref="updateNotificationsLogTask"/>
			<property name="cronExpression" value="0 0/10 * 1/1 * ? *"/>
			<property name="group" value="NOTIFICATIONS_LOG_UPDATE_TRIGGER_GROUP"/>
			<property name="name" value="NOTIFICATIONS_LOG_UPDATE_TRIGGER"/>
			<property name="misfireInstruction"
					  value="#{T(org.quartz.CronTrigger).MISFIRE_INSTRUCTION_DO_NOTHING}"/>
		</bean>
		<bean class="service.quartz.PersistableCronTriggerFactoryBean">
			<property name="jobDetail" ref="refreshDataJob"/>
			<property name="cronExpression" value="0 0/30 * 1/1 * ? *"/>
			<property name="group" value="REFRESH_DATA_TRIGGER_GROUP"/>
			<property name="name" value="REFRESH_DATA_TRIGGER"/>
			<property name="misfireInstruction"
					  value="#{T(org.quartz.CronTrigger).MISFIRE_INSTRUCTION_DO_NOTHING}"/>
		</bean>
	</util:list>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- Quartz requires a separate 'quartz.properties' file -->
		<property name="configLocation" value="properties/quartz.properties"/>

		<!-- Naturally, Quartz with the DB requires references to the data source and transaction manager beans -->
		<property name="dataSource" ref="dataSource"/>
		<property name="transactionManager" ref="transactionManager"/>

		<!-- reference to our 'autowiring job factory bean', defined above: -->
		<property name="jobFactory" ref="quartzJobFactory"/>

		<!-- Boolean controlling whether you want to override the job definitions in the DB on the app start up. -->
		<property name="overwriteExistingJobs" value="false"/>

		<property name="autoStartup" value="false"/>
		<property name="schedulerName" value="quartzScheduler"/>
		<property name="applicationContextSchedulerContextKey" value="applicationContext"/>

		<!-- Controls whether to wait for jobs completion on app shutdown, we use 'true' -->
		<property name="waitForJobsToCompleteOnShutdown"
				  value="false"/>

		<!-- You can override any property from the 'quartz.properties' here,
			 using the more flexible Spring mechanisms, for example: -->
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceId">
					${org.quartz.scheduler.instanceId}
				</prop>
				<prop key="org.quartz.scheduler.instanceName">
					${org.quartz.scheduler.instanceName}
				</prop>
			</props>
		</property>

		<property name="triggers" ref="quartzTriggers"/>
	</bean>

</beans>